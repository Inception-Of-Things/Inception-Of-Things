#!/bin/bash

# Fonction pour installer Docker sur Ubuntu
install_docker() {
    print_message "\nüêã Installation de Docker..." "blue"

    # V√©rifier si Docker est d√©j√† install√©
    if ! command -v docker &>/dev/null; then
        print_message "Docker n'est pas install√©. Installation en cours..." "yellow"

        # Mise √† jour des d√©p√¥ts et installation des d√©pendances n√©cessaires
        sudo apt-get update
        sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common

        # Ajouter la cl√© GPG de Docker
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

        # Ajouter le d√©p√¥t Docker stable
        sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"

        # Mise √† jour de la liste des paquets et installation de Docker
        sudo apt-get update
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io

        # D√©marrer Docker et l'activer pour qu'il se lance au d√©marrage
        sudo systemctl start docker
        sudo systemctl enable docker

        print_message "Docker install√© avec succ√®s." "green"
    else
        print_message "Docker est d√©j√† install√©.\nRestarting Docker..." "green"
        sudo systemctl start docker
    fi
}

# Fonction pour v√©rifier et ajouter l'utilisateur au groupe docker
add_user_to_docker_group() {
    print_message "\nü™™  V√©rification de l'appartenance au groupe 'docker'..." "blue"

    # V√©rifier si l'utilisateur fait d√©j√† partie du groupe docker
    if groups $(whoami) | grep &>/dev/null '\bdocker\b'; then
        print_message "L'utilisateur est d√©j√† dans le groupe docker." "green"
    else
        print_message "L'utilisateur n'est pas dans le groupe docker. Ajout en cours..." "yellow"
        sudo usermod -aG docker $(whoami)
        print_message "Utilisateur ajout√© au groupe docker. Veuillez vous d√©connecter puis vous reconnecter pour appliquer les changements." "yellow"
        
        # Appliquer imm√©diatement les changements du groupe sans se d√©connecter
        newgrp docker

        # Message suppl√©mentaire pour pr√©venir que newgrp a √©t√© utilis√©
        print_message "Les changements ont √©t√© appliqu√©s imm√©diatement avec 'newgrp docker'." "green"
    fi
}



# Fonction pour v√©rifier l'installation de kubectl
verify_kubectl() {
    print_message "\nüß≠ V√©rification de l'installation de kubectl..." "blue"
    if ! command -v kubectl &>/dev/null; then
        print_message "kubectl n'est pas install√©. Installation en cours..." "yellow"
        install_kubectl
    else
        print_message "kubectl est d√©j√† install√©." "green"
    fi
}

# Fonction pour installer kubectl
install_kubectl() {
    print_message "Installation de kubectl..." "blue"

    # T√©l√©charger et installer la derni√®re version de kubectl
    curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    chmod +x kubectl
    sudo mv kubectl /usr/local/bin/

    print_message "kubectl install√© avec succ√®s." "green"
}

# Fonction pour installer k3d
install_k3d() {
    print_message "Installation de k3d..." "blue"
    curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash
    print_message "k3d install√© avec succ√®s." "green"
}

# Fonction pour v√©rifier l'installation de k3d
verify_k3d() {
    print_message "V√©rification de l'installation de k3d..." "blue"
    if ! command -v k3d &>/dev/null; then
        print_message "k3d n'est pas install√©. Installation en cours..." "yellow"
        install_k3d
    else
        print_message "k3d est d√©j√† install√©." "green"
    fi
}

# Fonction principale pour v√©rifier et installer Docker, k3d, kubectl, et ajouter l'utilisateur au groupe docker
install_all() {
    install_docker
    add_user_to_docker_group
    verify_kubectl
    verify_k3d
}
